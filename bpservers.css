:root {
    --border-radius: 5px;
    --ui-border-radius: 3px;
}

* {
    font-size: 1em;
    font-family: sans-serif;
    line-height: 1.3em;
}

h1 {
    font-size: 2em;
}

h2 {
    font-size: 1.5em;
}

select,
input,
button,
textarea,
.button {
    font-size: 0.8em;
    padding: 5px;
    border-radius: var(--ui-border-radius);
}

body {
    background-color: #333;
    color: #ddd;
    margin: 10px 20px;
}

a {
    text-decoration: none;
    color: cornflowerblue;
}

details {
    margin: 10px 0px;
}

summary {
    background-color: rgb(34, 34, 34);
    padding: 10px;
    cursor: pointer;
    user-select: none;
    transition: 0.2s;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: flex-start;
    align-content: center;
    border-radius: var(--border-radius);
}

details[open] summary {
    border-radius: var(--border-radius) var(--border-radius) 0 0;
}

summary:hover {
    background-color: #3f3f3f;
}

summary>* {
    margin-right: 5px;
}

.content {
    padding: 10px;
    background-color: #282828;
    display: flex;
    flex-direction: column;
    border-radius: 0 0 var(--border-radius) var(--border-radius);
}

.content>div {
    margin: 2px 0px
}

button, .button {
    display: block;
    width: fit-content;
    background-color: #292993;
    color: white;
    font-weight: bold;
    border-style: none;
    transition: 0.2s;
    cursor: pointer;
    padding: 7px;
}

button:hover,
.button:hover {
    background-color: #4242cf;
}

.title {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
}

table {
    width: 100%;
    border-spacing: 0;
}

tr {
    background-color: rgb(34 34 34);
    transition: 0.2s;
    cursor: pointer;
    user-select: none;
}

tr:hover {
    background-color: #3f3f3f;
}

tr.outdated:hover {
    background-color: #3c2525;
}

tr.serverInfo {
    background-color: #181818;
    cursor: default;
    user-select: auto;
}

tr.serverInfo:hover {
    background-color: #181818;
}

tr.serverInfo td {
    padding: 0;
}

.info {
    display: grid;
    grid-template-rows: 0fr;
    transition: grid-template-rows 0.3s ease-out;
}

.info.show {
    grid-template-rows: 1fr;
}

.info .inner {
    padding: 0;
    overflow: hidden;
    text-align: left;
    transition: 0.3s;
}

.info.show .inner {
    padding: 0.5em 1em;
}

td {
    padding: 0.5em 1em;
    width: 0;
}

td.name {
    width: max-content;
}

td:not(.name) {
    text-align: center;
}

tr.info td {
    text-align: left !important;
}

tr:last-child td:first-child {
    border-bottom-left-radius: var(--border-radius);
}

tr:last-child td:last-child {
    border-bottom-right-radius: var(--border-radius);
}

.icon {
    height: 1em;
    border-radius: var(--ui-border-radius);
}

.filters {
    background-color: rgb(34 34 34);
    padding: 0.5em 1em;
    border-radius: var(--border-radius) var(--border-radius) 0 0;
}

.filters div {
    display: flex;
    flex-direction: row;
    align-items: center;
    flex-wrap: nowrap;
    justify-content: flex-start;
}

.filters div:not(:first-child) {
    margin-top: 1em;
}

input {
    background-color: #3e3e3e;
    border: none;
    cursor: pointer;
    margin: 0 2em 0 0.5em;
}

select {
    background-color: #3e3e3e;
    color: white;
    border: none;
    font-weight: bold;
    cursor: pointer;
    margin: 0 2em 0 0.5em;
}

select.no-margin {
    margin: 0 0.5em;
    ;
}

select:focus {
    outline: none;
}

input[type="radio"] {
    display: none;
}

label {
    display: flex;
    flex-direction: row;
    align-items: center;
}

label input[type="checkbox"] {
    display: none;
}

label .checkmark {
    display: inline-block;
    height: 1em;
    width: 1em;
    margin: 0 2em 0 0.5em;
    background-color: #3e3e3e;
    border: 1px solid #8e8e8e;
    border-radius: var(--ui-border-radius);
    transition: 0.2s;
}

label:hover input[type="checkbox"]~.checkmark {
    background-color: #8e8e8e;
}

label .checkmark:after {
    content: "";
    position: absolute;
    display: none;
    border-radius: calc((var(--ui-border-radius) / 3) * 2);
}

label input[type="checkbox"]:checked~.checkmark:after {
    display: block;
}

label .checkmark:after {
    width: 0.5em;
    height: 0.5em;
    background: #fff;
    margin: 0.25em;
}

.label-button {
    cursor: pointer;
    color: #3e3e3e;
    margin: 0 0.1em;
    font-size: calc(1em + 4px);
    transition: 0.2s;
    user-select: none;
    -webkit-text-stroke: 1px #8e8e8e;
    text-stroke: 1px #8e8e8e;
}

input[type="radio"]:hover+label {
    color: #8e8e8e;
}

input[type="radio"]:checked+label {
    color: #fff;
    text-shadow: rgb(255 255 255 / 30%) 0 0 15px;
}

.news {
    cursor: help;
    user-select: none;
    text-decoration: underline dotted 2px;
}

.modal-background {
    z-index: 1;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
}

.modal {
    z-index: 2;
    position: absolute;
    top: 50%;
    left: 50%;
    width: 80%;
    height: 80%;
    background-color: #262626;
    translate: -50% -50%;
    border-radius: var(--border-radius);
    box-shadow: 3px 3px 20px 0px rgba(0, 0, 0, 0.3);
    padding: 10px 20px;
}

.modal>.modal-content {
    overflow: auto;
    height: calc(100% - 80px);
}

.modal>.close {
    font-size: xx-large;
    position: absolute;
    right: 20px;
    top: 30px;
    cursor: pointer;
    transition: 0.2s;
    overflow: hidden;
}

.modal>.close:hover {
    color: #fff;
}

.loading {
    position: absolute;
    top: calc(50% - 50px);
    left: calc(50% - 50px);
    transform: translate(-50%, -50%);
    width: 100px;
    height: 100px;
    border-radius: 50%;
    border: 10px solid #222222;
    border-top-color: #dddddd;
    animation: spin 1s cubic-bezier(1, 0.25, 0.4, 0.8) infinite;
}

.info-tooltip {
    cursor: help;
    font-weight: bold;
}

#tooltip {
    position: absolute;
    background: #ebebeb;
    color: black;
    padding: 5px;
    pointer-events: none;
    opacity: 0;
    transition: 0.2s;
}

#tooltip.fadeIn {
    opacity: 1;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}